#!/bin/bash
#
# accounts-api		Start up the accounts API server
#
# chkconfig: 2345 55 25
# description: accounts API provides REST access to the basic methods for performing the accounts provisioning. \
#              This service starts up the accounts API daemon.
#
### BEGIN INIT INFO
# Provides: accounts-api
# Required-Start: $local_fs $network $syslog
# Required-Stop: $local_fs $syslog
# Should-Start: $syslog
# Should-Stop: $network $syslog
# Default-Start: 2 3 4 5
# Default-Stop: 0 1 6
# Short-Description: Start up the accounts API daemon
# Description:       accounts API calls the accounts stack engine to perform accounts actions.
#		     This service starts up the accounts API daemon.
### END INIT INFO

# source function library
. /etc/rc.d/init.d/functions

# pull in sysconfig settings
[ -f /etc/sysconfig/accounts-api ] && . /etc/sysconfig/accounts-api

RETVAL=0
prog="accounts-api"
lockfile=/var/lock/subsys/$prog

# Some functions to make the below more readable
DAEMON=accounts-api
PID_FILE=/var/run/accounts-api.pid
TDAF_PATH=/usr/bin
DAEMON_PATH=$(echo $TDAF_PATH"/"$DAEMON)
PROC_NAME="python $DAEMON_PATH"

runlevel=$(set -- $(runlevel); eval "echo \$$#" )

start()
{
	[ -x $DAEMON_PATH ] || exit 5
	[ -f /etc/accounts/accounts-api.conf ] || exit 6

	echo -n $"Starting $prog: "
	$DAEMON_PATH $OPTIONS & success || failure
	RETVAL=$?
	[ $RETVAL -eq 0 ] && touch $lockfile
	pgrep -f "$PROC_NAME" > $PID_FILE
	echo
	return $RETVAL
}

stop()
{
	echo -n $"Stopping $prog: "
	if [ -n "`pidfileofproc $DAEMON`" ] ; then
	    killproc $DAEMON
	else
	    failure $"Stopping $prog"
	fi
	RETVAL=$?
	[ $RETVAL -eq 0 ] && rm -f $lockfile
	echo
}

reload()
{
	echo -n $"Reloading $prog: "
	if [ -n "`pidfileofproc $DAEMON_PATH`" ] ; then
	    killproc $DAEMON_PATH -HUP
	else
	    failure $"Reloading $prog"
	fi
	RETVAL=$?
	echo
}

restart() {
	stop
	start
}

force_reload() {
	restart
}

rh_status() {
	status -p $PID_FILE $prog
}

rh_status_q() {
	rh_status >/dev/null 2>&1
}

case "$1" in
	start)
		rh_status_q && exit 0
		start
		;;
	stop)
		if ! rh_status_q; then
			rm -f $lockfile
			exit 0
		fi
		stop
		;;
	restart)
		restart
		;;
	reload)
		rh_status_q || exit 7
		reload
		;;
	force-reload)
		force_reload
		;;
	condrestart|try-restart)
		rh_status_q || exit 0
		if [ -f $lockfile ] ; then
			do_restart_sanity_check
			if [ $RETVAL -eq 0 ] ; then
				stop
				# avoid race
				sleep 3
				start
			else
				RETVAL=6
			fi
		fi
		;;
	status)
		rh_status
		RETVAL=$?
		if [ $RETVAL -eq 3 -a -f $lockfile ] ; then
			RETVAL=2
		fi
		;;
	*)
		echo $"Usage: $0 {start|stop|restart|reload|force-reload|condrestart|try-restart|status}"
		RETVAL=2
esac
exit $RETVAL
